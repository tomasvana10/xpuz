{
    "objektiks": "Klassi n\u00e4ide",
    "ise": "K\u00f5ige tavalisem nimi, mis t\u00e4histab klassi praegust eksemplari meetodi sees",
    "selles": "Klassi konstruktorimeetod",
    "importida": "Toob koodi teistest moodulitest",
    "alates": "Impordib moodulist konkreetseid osi",
    "nagu": "Annab imporditud moodulile v\u00f5i objektile varjunime",
    "nimekirja m\u00f5istmine": "Paradigma loendi loomiseks \u00fchel real",
    "f-string": "Vormindab stringe manustatud muutujatega",
    "viilutamine": "Meetod stringi osade eraldamiseks indeksite abil",
    "dekoraator": "Funktsiooni k\u00e4itumise muutmise meetod",
    "dokstring": "Funktsioonile v\u00f5i klassile lisatud dokumentatsioonistring",
    "staatiline meetod": "Meetod, millel puudub juurdep\u00e4\u00e4s klassi v\u00f5i eksemplari atribuutidele",
    "klassi meetod": "Meetod, mis v\u00f5tab kaudselt selle klassi esimese parameetrina",
    "eksemplari meetod": "Meetod, mis v\u00f5tab eksemplari kaudselt vastu esimese parameetrina",
    "tuim": "Tuntud pythoni teek, mis pakub peamiselt k\u00f5rgetasemelisi massiivip\u00f5hiseid matemaatilisi funktsioone",
    "tkinter": "Sisseehitatud teek GUI loomiseks",
    "morska operaator": "Operaator, mis v\u00f5imaldab muutuja initsialiseerimist if-lauseplokis",
    "k\u00f5ik": "Pakettides kasutatava globaalse muutuja nimi, mis m\u00e4\u00e4rab moodulid, mis tuleb metam\u00e4rgiga importida",
    "args": "H\u00fc\u00fcdnimi, mis antakse suvalistele mittem\u00e4rks\u00f5naargumentidele",
    "kwargs": "Suvalistele m\u00e4rks\u00f5naargumentidele antud h\u00fc\u00fcdnimi",
    "kaldkriips": "M\u00e4rgijagaja n\u00f5uab, et sellest vasakul olevad argumendid oleksid positsiooniargumendid",
    "t\u00e4rn": "M\u00e4rgijagaja on m\u00e4rks\u00f5na argumendid"
}